{
  "hash": "d026dfa15e8e4a32248b914fc638a6a3",
  "result": {
    "markdown": "---\ntitle: \"时间网络分析\"\nformat: html\neditor: visual\n---\n\n\n## 1 时间网络分析概述\n\n#### 1.1 几种数据类型\n\n首先，从测量次数角度，我们要注意区分几种数据类型：单一测量数据（每人一个测量）、面板数据（许多人测量了几次）、N = 1时间序列数据（一个人测量了多次）和N \\> 1时间序列数据（几个人测量了多次）。\n\n#### 1.2 时间网络分析\n\n时间网络分析（Temporal network analysis）是网络分析的最新进展之一，它将关系和时间维度结合到一个单一的分析框架中，即：时间网络，也称为时间序列网络、时变网络、动态网络或演化网络。\n\n时间网络分析是一种新颖而具有前景的方法，它比其他更常用的纵向建模技术\\[如交叉滞后面板模型(CLPM)，回归模型\\]具有优势。\n\n首先，时态网络分析中经常涉及到建立图形向量自回归(GVAR)模型，其允许估计考虑时间上个体内差异的有向网络，而CLPM没有分离个体内效应（within-person effects）和个体间效应（between-person effects），这可能导致变量之间因果关系的不正确结论。尽管后来发展起来的CLPM ------随机截距 CLPM可以将时间不变（time-invariant）、类似特质（trait-like）的个体间效应与个体内效应区分开来，但它需要更大的样本和更大的检验效能，特别是对于具有更多变量的更复杂的模型。\n\n![](images/几种效应设计图.png){引用自WITH R NETWORK PSYCHOMETRICS=\"\" fig-align=\"center\"}\n\n其次，时间网络分析评估模型中每个变量的中心性，这可以识别网络中最重要的(或最有影响力的)节点。由于高度中心的节点影响网络中最多的变量，因此它们可能是干预的有用目标。\n\n#### 1.3 分析思路\n\n时间网络分析还在发展之中，并不完善。对于N=1的时间序列网络分析，主要思想是通图形向量自回归模型（GVAR）进行处理；对于N\\>1的时间序列，可能会更多地考虑多层VAR（mlVAR包实现了这种统计建模方法）。\n\n在VAR中，在连续的时间点之间使用线性回归来建模时间依赖关系，允许人们在控制了时间效应（同期效应）后，获得跨时间的关系（时间效应）和同一测量窗口中的关系的单独估计。VAR变体是这一部分的核心焦点是图形VAR（GVAR）模型，其中同时的效果被进一步建模为高斯图形模型。因此，GVAR模型返回两种网络结构：一个时间网络，这是一个时间关系的有向网络；一个同时网络，它是一个同时关系的无向网络。\n\n#### 1.4 工具包\n\n可以实现上述几种时间序列数据网络分析的R包有多种，目前来看并不统一，单是我在各类文献中看到的工具包就不少，比如，有用[时间社会网络分析（tsna）](https://link.springer.com/chapter/10.1007/978-3-031-54464-4_17#Sec6)的，有用多水平向量自回归([mlVAR包](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7530190/)，Multi-Level Vector Autoregression)的，也有用[时变向量自回归包（mgm包）](https://mental.jmir.org/2024/1/e50136)以及[psychonetrics包（面板GVAR模型）](https://www.researchgate.net/publication/374951207_Peer_functioning_difficulties_may_exacerbate_symptoms_of_attention-deficithyperactivity_disorder_and_irritability_over_time_a_temporal_network_analysis?enrichId=rgreq-a67fefe7d73659d604617e894336fc35-XXX&enrichSource=Y292ZXJQYWdlOzM3NDk1MTIwNztBUzoxMTQzMTI4MTIwMTIwMzk2OEAxNjk4MjQ3Nzg1NTQz&el=1_x_3&_esc=publicationCoverPdf)......\n\n虽然让人眼花缭乱，但底层逻辑是相似的，主要还是要看你的研究类型和目的。譬如，mlVAR会分离出以下三种网络：\n\n![](images/时间序列---三种网络.png){引用自WITH R NETWORK PSYCHOMETRICS=\"\" fig-align=\"center\"}\n\n我在上述对应R包的名字上附上了具体文献或者代码仓库的超链接，你如果感兴趣的话，可以点进去看看这些文献对Temporal network analysis的具体实现方法。\n\n个人比较推荐使用**mlVAR**构建时间序列网络模型。\n\n### 2 R语言实战\n\n#### 2.1 准备数据\n\n为了避免版本兼容性问题，大家可以先跳转到文末看看我使用的R语言环境。\n\n先导入需要使用的程序包，没有安装的请先安装。\n\n\n\n\n\n本次我们用mlVAR包的mlVARsim函数模拟一份数据(实际是拟合也了一个时间网络模型)，为了减轻电脑的计算负担，设置受试者人数为50，节点数为8个，测量次数是30，阶数lag为1，其它都是默认设置。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nModel = mlVARsim(nPerson = 50,nNode = 8, nTime = 30, lag=1)\n```\n:::\n\n\n查看数据：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(Model$Data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         V1       V2        V3        V4        V5         V6         V7\n1 2.0335217 3.157925 -3.876432 -4.733132 -2.543258 -0.6276040  1.4945052\n2 2.2822126 3.732587 -4.179065 -1.685546 -2.404072  1.7619746 -0.1781815\n3 1.5409651 2.615361 -2.934132 -3.383525 -1.873246  2.5694409 -3.4722245\n4 0.6782198 3.847820 -1.470588 -5.984845 -2.705544  1.5355441 -0.9820712\n5 3.8371249 3.970785 -1.777491 -2.959565 -3.943941  0.5437959 -1.6252762\n6 3.0328899 1.786133 -1.560092 -1.860449 -2.511397  2.1500955  1.1310869\n         V8 ID\n1 -8.729056  1\n2 -7.772314  1\n3 -6.317016  1\n4 -6.868845  1\n5 -6.163121  1\n6 -5.477314  1\n```\n:::\n:::\n\n\n查看节点名：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nModel$vars\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"V1\" \"V2\" \"V3\" \"V4\" \"V5\" \"V6\" \"V7\" \"V8\"\n```\n:::\n:::\n\n\n查看受试者变量：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nModel$idvar\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"ID\"\n```\n:::\n:::\n\n\n绘图：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(Model)\n```\n\n::: {.cell-output-display}\n![](时间网络分析_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n#### 2.2 拟合模型\n\n好戏开始：用mlVAR函数拟合时间网络模型！\n\n这里面的data、vars、idvar是必须写的，分别表示数据、要分析的变量名、代表受试者的变量。lags可以选用默认参数，estimator是估计器，具体的选项可以查看帮助文档，这里选择lmer；contemporaneous（同期网络）、temporal（时序网络）估计方法都采用\"correlated\"；nCores指定使用的cpu核心数，计算量不小，可以适当大一些。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit1 = mlVAR(data = Model$Data, \n            vars = Model$vars, \n            idvar = Model$idvar, \n            lags = 1, \n            estimator = \"lmer\",\n            temporal = \"correlated\",\n            contemporaneous = \"correlated\",\n            nCores = 8,\n            verbose =F\n )\n```\n:::\n\n\n总结模型：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nmlVAR estimation completed. Input was:\n \t- Variables: V1 V2 V3 V4 V5 V6 V7 V8 \n \t- Lags: 1 \n \t- Estimator: lmer \n \t- Temporal: correlated\n\nInformation indices:\n var      aic      bic\n  V1 3199.817 3527.135\n  V2 2934.493 3261.810\n  V3 3112.823 3440.141\n  V4 2840.875 3168.193\n  V5 2705.464 3032.781\n  V6 2985.371 3312.689\n  V7 3090.526 3417.844\n  V8 2959.122 3286.440\n\n\nTemporal effects:\n from to lag  fixed    SE     P ran_SD\n   V1 V1   1  0.116 0.029 0.000  0.078\n   V1 V2   1  0.175 0.027 0.000  0.090\n   V1 V3   1 -0.515 0.041 0.000  0.216\n   V1 V4   1 -0.441 0.030 0.000  0.120\n   V1 V5   1  0.005 0.033 0.890  0.162\n   V1 V6   1  0.362 0.028 0.000  0.083\n   V1 V7   1  0.269 0.030 0.000  0.102\n   V1 V8   1  0.035 0.041 0.394  0.229\n   V2 V1   1  0.032 0.042 0.449  0.242\n   V2 V2   1  0.132 0.036 0.000  0.199\n   V2 V3   1  0.309 0.032 0.000  0.154\n   V2 V4   1  0.140 0.031 0.000  0.154\n   V2 V5   1  0.037 0.032 0.250  0.174\n   V2 V6   1 -0.384 0.039 0.000  0.229\n   V2 V7   1 -0.285 0.036 0.000  0.196\n   V2 V8   1  0.048 0.034 0.154  0.182\n   V3 V1   1  0.027 0.030 0.372  0.102\n   V3 V2   1  0.004 0.027 0.886  0.084\n   V3 V3   1  0.117 0.032 0.000  0.134\n   V3 V4   1  0.167 0.035 0.000  0.178\n   V3 V5   1 -0.265 0.025 0.000  0.082\n   V3 V6   1 -0.023 0.029 0.425  0.105\n   V3 V7   1 -0.038 0.027 0.159  0.064\n   V3 V8   1  0.332 0.029 0.000  0.109\n   V4 V1   1  0.050 0.036 0.168  0.180\n   V4 V2   1 -0.181 0.036 0.000  0.198\n   V4 V3   1 -0.022 0.039 0.573  0.208\n   V4 V4   1  0.255 0.039 0.000  0.224\n   V4 V5   1  0.184 0.038 0.000  0.219\n   V4 V6   1  0.161 0.038 0.000  0.208\n   V4 V7   1 -0.239 0.043 0.000  0.248\n   V4 V8   1  0.138 0.038 0.000  0.208\n   V5 V1   1 -0.022 0.029 0.448  0.106\n   V5 V2   1  0.392 0.026 0.000  0.077\n   V5 V3   1 -0.131 0.029 0.000  0.101\n   V5 V4   1 -0.024 0.026 0.351  0.088\n   V5 V5   1  0.055 0.028 0.049  0.122\n   V5 V6   1  0.027 0.030 0.369  0.129\n   V5 V7   1  0.043 0.031 0.162  0.134\n   V5 V8   1 -0.041 0.025 0.092  0.053\n   V6 V1   1 -0.023 0.033 0.492  0.141\n   V6 V2   1 -0.039 0.046 0.394  0.271\n   V6 V3   1  0.098 0.038 0.009  0.187\n   V6 V4   1 -0.066 0.034 0.055  0.170\n   V6 V5   1  0.167 0.040 0.000  0.227\n   V6 V6   1  0.009 0.040 0.820  0.212\n   V6 V7   1 -0.105 0.039 0.007  0.201\n   V6 V8   1 -0.018 0.039 0.639  0.211\n   V7 V1   1 -0.012 0.034 0.731  0.155\n   V7 V2   1 -0.016 0.027 0.554  0.092\n   V7 V3   1  0.019 0.035 0.582  0.168\n   V7 V4   1  0.251 0.029 0.000  0.119\n   V7 V5   1  0.183 0.026 0.000  0.097\n   V7 V6   1 -0.042 0.027 0.126  0.094\n   V7 V7   1  0.031 0.027 0.253  0.071\n   V7 V8   1  0.253 0.026 0.000  0.071\n   V8 V1   1 -0.072 0.042 0.087  0.226\n   V8 V2   1 -0.432 0.037 0.000  0.192\n   V8 V3   1  0.138 0.042 0.001  0.232\n   V8 V4   1 -0.027 0.040 0.493  0.219\n   V8 V5   1  0.219 0.038 0.000  0.216\n   V8 V6   1 -0.033 0.039 0.393  0.211\n   V8 V7   1  0.202 0.038 0.000  0.197\n   V8 V8   1  0.137 0.040 0.001  0.220\n\n\nContemporaneous effects (posthoc estimated):\n v1 v2 P 1->2 P 1<-2   pcor ran_SD_pcor    cor ran_SD_cor\n V2 V1  0.000  0.000 -0.255       0.218 -0.237      0.243\n V3 V1  0.761  0.999 -0.006       0.171 -0.031      0.186\n V3 V2  0.351  0.302  0.042       0.184 -0.116      0.185\n V4 V1  0.000  0.000  0.224       0.169  0.263      0.232\n V4 V2  0.771  0.861  0.009       0.172 -0.039      0.218\n V4 V3  0.451  0.683 -0.022       0.141 -0.063      0.204\n V5 V1  0.013  0.002 -0.124       0.209 -0.060      0.236\n V5 V2  0.000  0.000  0.194       0.203  0.275      0.217\n V5 V3  0.000  0.000 -0.264       0.189 -0.335      0.219\n V5 V4  0.000  0.000  0.182       0.239  0.193      0.286\n V6 V1  0.000  0.000  0.177       0.084  0.060      0.172\n V6 V2  0.000  0.000  0.287       0.215  0.306      0.212\n V6 V3  0.000  0.000 -0.270       0.140 -0.321      0.146\n V6 V4  0.000  0.001 -0.147       0.165 -0.108      0.234\n V6 V5  0.038  0.005  0.089       0.131  0.214      0.188\n V7 V1  0.104  0.161  0.063       0.173  0.204      0.165\n V7 V2  0.610  0.653  0.020       0.171 -0.017      0.239\n V7 V3  0.738  0.273 -0.026       0.137 -0.059      0.206\n V7 V4  0.000  0.000  0.310       0.169  0.404      0.200\n V7 V5  0.847  0.588 -0.006       0.156  0.131      0.267\n V7 V6  0.008  0.013 -0.090       0.117 -0.078      0.157\n V8 V1  0.000  0.000  0.166       0.146  0.220      0.171\n V8 V2  0.406  0.858  0.023       0.189  0.047      0.284\n V8 V3  0.954  0.405 -0.015       0.142 -0.124      0.216\n V8 V4  0.586  0.979  0.010       0.123  0.230      0.206\n V8 V5  0.000  0.000  0.202       0.125  0.260      0.207\n V8 V6  0.311  0.312  0.039       0.153  0.075      0.227\n V8 V7  0.000  0.000  0.344       0.149  0.414      0.163\n\n\nBetween-subject effects:\n v1 v2 P 1->2 P 1<-2   pcor    cor\n V2 V1  0.282  0.811  0.080  0.155\n V3 V1  0.038  0.067  0.240  0.251\n V3 V2  0.958  0.467 -0.042  0.047\n V4 V1  0.122  0.295  0.164  0.126\n V4 V2  0.707  0.322  0.091  0.172\n V4 V3  0.418  0.238 -0.131 -0.117\n V5 V1  0.264  0.142 -0.161 -0.047\n V5 V2  0.085  0.001  0.306  0.185\n V5 V3  0.276  0.252  0.142  0.155\n V5 V4  0.121  0.187 -0.187 -0.345\n V6 V1  0.003  0.001  0.370  0.317\n V6 V2  0.128  0.713  0.122  0.057\n V6 V3  0.312  0.756  0.044  0.161\n V6 V4  0.311  0.704 -0.091 -0.244\n V6 V5  0.240  0.120  0.172  0.304\n V7 V1  0.132  0.183 -0.179 -0.121\n V7 V2  0.396  0.486  0.100  0.083\n V7 V3  0.334  0.764  0.081 -0.038\n V7 V4  0.036  0.036  0.261  0.349\n V7 V5  0.177  0.072 -0.198 -0.280\n V7 V6  0.290  0.685 -0.039 -0.215\n V8 V1  0.312  0.134  0.148  0.139\n V8 V2  0.001  0.001  0.378  0.362\n V8 V3  0.326  0.624  0.090  0.027\n V8 V4  0.121  0.029  0.225  0.407\n V8 V5  0.127  0.399 -0.146 -0.239\n V8 V6  0.000  0.017 -0.340 -0.344\n V8 V7  0.902  0.974 -0.006  0.188\n```\n:::\n:::\n\n\n上面给出了大量的信息。值得注意的是，mlVAR包会输出3种效应：Temporal effects、Contemporaneous effects、Between-subject effects，分别对应时序网络、同期网络和个体间网络。\n\n-   **Temporal effects（时间效应）**：这是指变量在时间上对自身或其它变量的影响，这些效应通常是通过滞后回归权重来估计的，可以捕捉变量随时间的动态关系 。时序网络中的边是指变量在上个时间点t-1对下个时间点t的各节点的预测能力（控制了上个时间点t-1上的其他变量之后）。\n\n-   **Contemporaneous effects（同期效应）**：这是指在相同时间点上变量之间的关系，可以是简单的相关关系或偏相关关系。这些关系通常是通过模型残差的相互关系来估计的，可以揭示在同一时间点上变量之间的直接联系 。\n\n-   **Between-subject effects（个体间效应）**：这是指在不同个体之间（平均水平层面的）变量关系的差异，可以是相关关系或偏相关关系。这些效应反映了不同个体在变量关系上的差异，有助于理解不同个体在心理过程上的差异 。\n\n#### 2.3 可视化\n\n我们可以分别绘制这些网络图：\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 同期网络\ncontemporaneous = plot(fit1, type = \"temporal\", title = \"Estimated temporal relationships\", \n     rule = \"and\",layout = \"circle\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n'nonsig' argument set to: 'hide'\n```\n:::\n\n::: {.cell-output-display}\n![](时间网络分析_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 时序网络\ntemporal=plot(fit1, type = \"contemporaneous\", rule = \"and\",\n     title = \"Estimated contemporaneous relationships\", layout = \"circle\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n'nonsig' argument set to: 'hide'\n```\n:::\n\n::: {.cell-output-display}\n![](时间网络分析_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 受试者间网络  必须取名between，否则报错\nbetween = plot(fit1, type = \"between\", rule = \"or\",\n     title = \"Estimated between relationships\", layout = \"circle\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n'nonsig' argument set to: 'hide'\n```\n:::\n\n::: {.cell-output-display}\n![](时间网络分析_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n#### 2.4 计算中心性\n\n可以跟横断面网络一样，计算或者开展后续一些常用的指标和检验，比如中心性，桥梁症状。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 计算中心性\ncentrality(contemporaneous)  \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$OutDegree\n       V1        V2        V3        V4        V5        V6        V7        V8 \n1.7626296 1.1175046 0.7645637 0.9034969 0.5231023 0.3698123 0.6865014 0.9912068 \n\n$InDegree\n       V1        V2        V3        V4        V5        V6        V7        V8 \n0.0000000 1.1805817 1.1909310 0.9991603 1.0172301 0.9069345 1.1013387 0.7226413 \n\n$Closeness\n        V1         V2         V3         V4         V5         V6         V7 \n0.03696362 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 \n        V8 \n0.00000000 \n\n$Betweenness\nV1 V2 V3 V4 V5 V6 V7 V8 \n 0 11  6  0  1  0  2  6 \n\n$InExpectedInfluence\n         V1          V2          V3          V4          V5          V6 \n 0.00000000 -0.04617963 -0.10094765  0.11654432  0.48700373  0.13880776 \n         V7          V8 \n-0.15752989  0.72264128 \n\n$OutExpectedInfluence\n         V1          V2          V3          V4          V5          V6 \n-0.14918637 -0.22089092  0.23433731  0.06198312  0.26042372  0.16018255 \n         V7          V8 \n 0.68650135  0.12698916 \n\n$ShortestPathLengths\n    V1       V2        V3        V4       V5       V6       V7        V8\nV1   0 5.700019  1.943257  2.265991 5.715231 2.763749 3.711177  4.954201\nV2 Inf 0.000000  3.238940  7.165181 7.010914 2.603737 3.507118  6.249884\nV3 Inf 5.325176  0.000000  5.976258 3.771974 7.928913 7.950482  3.010944\nV4 Inf 5.516577  8.755517  0.000000 5.430191 6.209490 4.175626  7.270580\nV5 Inf 2.552564  5.791503  9.717744 0.000000 5.156301 6.059682  8.802448\nV6 Inf 8.558272 10.153397 13.525333 6.005709 0.000000 9.540629 13.164342\nV7 Inf 6.267130  9.506069  3.984703 5.477571 8.870867 0.000000  3.952898\nV8 Inf 2.314232  5.553172  8.924241 4.568496 4.917969 4.939537  0.000000\n\n$ShortestPaths\n   V1   V2   V3   V4   V5   V6   V7   V8  \nV1 NULL NULL NULL NULL NULL NULL NULL NULL\nV2 NULL NULL NULL NULL NULL NULL NULL NULL\nV3 NULL NULL NULL NULL NULL NULL NULL NULL\nV4 NULL NULL NULL NULL NULL NULL NULL NULL\nV5 NULL NULL NULL NULL NULL NULL NULL NULL\nV6 NULL NULL NULL NULL NULL NULL NULL NULL\nV7 NULL NULL NULL NULL NULL NULL NULL NULL\nV8 NULL NULL NULL NULL NULL NULL NULL NULL\n```\n:::\n:::\n\n\n可以将其绘制出来，下面的代码依次绘制同期网络、时序网络和个体间网络。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncentralityPlot(contemporaneous) \n```\n\n::: {.cell-output-display}\n![](时间网络分析_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncentralityPlot(temporal)\n```\n\n::: {.cell-output-display}\n![](时间网络分析_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncentralityPlot(between)\n```\n\n::: {.cell-output-display}\n![](时间网络分析_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n完全可以对绘图函数的参数做些个性化调整，这里不多展示了。\n\n#### 2.5 桥梁症状分析\n\n先人为对模拟数据的节点进行分组：\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngroups=c(rep('A',4),rep('B',2),rep('C',2))\n```\n:::\n\n\n计算桥梁中心性指标：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb = bridge(contemporaneous, communities= groups, directed=F)\nb\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$`Bridge Strength`\n       V1        V2        V3        V4        V5        V6        V7        V8 \n0.6312836 0.6691977 0.5972349 0.7222251 0.5231023 0.2033041 0.4335224 0.7887587 \n\n$`Bridge Betweenness`\nV1 V2 V3 V4 V5 V6 V7 V8 \n 5  1  1  5  0  1  2  3 \n\n$`Bridge Closeness`\n        V1         V2         V3         V4         V5         V6         V7 \n0.14014223 0.10893181 0.12090457 0.13274157 0.08197854 0.13031448 0.11021654 \n        V8 \n0.12678535 \n\n$`Bridge Expected Influence (1-step)`\n          V1           V2           V3           V4           V5           V6 \n 0.631283628 -0.669197749  0.067008531  0.243254960  0.260423716 -0.006325689 \n          V7           V8 \n 0.433522386 -0.075458952 \n\n$`Bridge Expected Influence (2-step)`\n         V1          V2          V3          V4          V5          V6 \n 0.51172975 -0.76244179  0.24764776  0.32814244  0.25875117  0.03340721 \n         V7          V8 \n 0.50311573  0.02808020 \n\n$communities\n[1] \"A\" \"A\" \"A\" \"A\" \"B\" \"B\" \"C\" \"C\"\n```\n:::\n:::\n\n\n简单绘图：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(b, include=c(\"Bridge Expected Influence (2-step)\", \"Bridge Strength\", \"Bridge Closeness\"),\n     theme_bw=F, raw0 = T, signed=T) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Vectorized input to `element_text()` is not officially supported.\nℹ Results may be unexpected or may change in future versions of ggplot2.\n```\n:::\n\n::: {.cell-output-display}\n![](时间网络分析_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n### 3 几个需要注意的地方\n\n时间网络分析目前还不完善，上述流程并没有覆盖到之前我们做横断面网络的所有评估指标和检验方法，比如稳定性、精确性、差异性检验，我还没有找到合适的R包可以很方便地对其进行分析（估计得自己写重抽样代码）。\n\n此外，时间网络分析不同于CLPM网络分析，其对数据有一些要求，比如说测量次数多、满足多元正态分布、具备平稳性......\n\n你如果有一份生态瞬时数据或者密集追踪数据，且想要进行时间网络分析，建议在建模前检查下数据，包括正态性（不服从也可以做）、平稳性（KPSS平稳性检验，文献提到可以用R包tseries实现，要一个个做，所以代码有些复杂），等等。\n\n#### **运行环境**\n\n`{r}`\n\n`sessionInfo()}`\n",
    "supporting": [
      "时间网络分析_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}