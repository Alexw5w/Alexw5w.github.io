{
  "hash": "a0b9f02721c61a5fe8e8214168d1e543",
  "result": {
    "markdown": "---\ntitle: \"混合变量网络分析\"\nformat: html\neditor: visual\n---\n\n\n### 1  简介\n\n如果你想要开展一项基于**混合类型数据**（即包含**连续变量、二分类变量、多分类变量**等不同类型数据）的网络分析，通常需要使用**混合图模型**（Mixed Graphical Models, **MGM**）进行分析。\n\n混合图模型是一种统计模型，用于处理具有不同数据类型的网络结构。它通过组合不同类型的概率分布，来描述连续、二分类、多分类等不同类型的变量之间的相互关系。MGM 在网络分析中非常有用，因为它能够统一处理多种数据类型，并建立它们之间的条件依赖结构。\n\n-   **连续变量**：通常假设服从正态分布，适用于数据类型为实数的数据。\n\n-   **二分类变量**：常见于0/1变量，适用于存在两种可能结果的情况。\n\n-   **多分类变量**：用于处理多个类别（如\"红\"、\"绿\"、\"蓝\"等）的数据。\n\nMGM 的目标是通过正则化技术（如 Lasso）来学习网络中节点之间的稀疏关系，使得网络结构更加清晰并具有解释性。\n\n### 2 R语言实现\n\nR软件包mgm可以轻松搞定混合图模型，这里给个简单的建模演示，并提供一个稳定性检验的思路。\n\n#### 2.1  导入包和数据\n\n导入包：\n\n\n\n\n\n导入数据：这里使用一份mgm自带的数据集，具体含义请?查看帮助文档。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(autism_data$data) #数据\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     Gender   IQ Integration in Society No of Comorbidities Type of Housing\n[1,]      1 6.00                      1                   1               1\n[2,]      2 6.00                      2                   1               1\n[3,]      1 5.00                      2                   0               1\n[4,]      1 6.00                      1                   0               1\n[5,]      1 5.00                      1                   1               1\n[6,]      1 4.49                      1                   1               1\n     Workinghours Satisfaction: Treatment\n[1,]            0                    3.00\n[2,]            0                    2.00\n[3,]            0                    4.00\n[4,]           10                    3.00\n[5,]            0                    1.00\n[6,]            0                    1.75\n```\n:::\n\n```{.r .cell-code}\nautism_data$type  #变量类型\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"c\" \"g\" \"c\" \"p\" \"c\" \"g\" \"g\"\n```\n:::\n:::\n\n\n#### 2.2  建模\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_k2 = mgm(data = autism_data$data,  \n             type = autism_data$type, \n             level = autism_data$lev, \n             k = 2) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |----------                                                            |  14%\n  |                                                                            \n  |--------------------                                                  |  29%\n  |                                                                            \n  |------------------------------                                        |  43%\n  |                                                                            \n  |----------------------------------------                              |  57%\n  |                                                                            \n  |--------------------------------------------------                    |  71%\n  |                                                                            \n  |------------------------------------------------------------          |  86%\n  |                                                                            \n  |----------------------------------------------------------------------| 100%\nNote that the sign of parameter estimates is stored separately; see ?mgm\n```\n:::\n:::\n\n\n提取领接矩阵：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit_k2$pairwise$wadj\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           [,1]       [,2]       [,3]       [,4]       [,5]       [,6]\n[1,] 0.00000000 0.05650110 0.01891638 0.17205785 0.37208064 0.02150960\n[2,] 0.05650110 0.00000000 0.22270593 0.21779243 0.50904041 0.00000000\n[3,] 0.01891638 0.22270593 0.00000000 0.33738414 0.09886023 0.24073935\n[4,] 0.17205785 0.21779243 0.33738414 0.00000000 0.00000000 0.00000000\n[5,] 0.37208064 0.50904041 0.09886023 0.00000000 0.00000000 0.34679957\n[6,] 0.02150960 0.00000000 0.24073935 0.00000000 0.34679957 0.00000000\n[7,] 0.04326794 0.05566156 0.32121423 0.07538601 0.06715508 0.04882564\n           [,7]\n[1,] 0.04326794\n[2,] 0.05566156\n[3,] 0.32121423\n[4,] 0.07538601\n[5,] 0.06715508\n[6,] 0.04882564\n[7,] 0.00000000\n```\n:::\n:::\n\n\n绘制网络图：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nqgraph(fit_k2$pairwise$wadj,\n       edge.color = fit_k2$pairwise$edgecolor,\n       layout = \"spring\",\n       labels =  autism_data$colnames)\n```\n\n::: {.cell-output-display}\n![](混合变量网络分析_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n#### 2.3  计算中心性\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncentrality(fit_k2$pairwise$wadj)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$OutDegree\n[1] 0.6843335 1.0617014 1.2398203 0.8026204 1.3939359 0.6578742 0.6115105\n\n$InDegree\n[1] 0.6843335 1.0617014 1.2398203 0.8026204 1.3939359 0.6578742 0.6115105\n\n$Closeness\n[1] 0.02538851 0.03552435 0.03338681 0.03019457 0.03320694 0.03140568 0.02196939\n\n$Betweenness\n[1]  0  6 12  4  6  0  0\n\n$InExpectedInfluence\n[1] 0.6843335 1.0617014 1.2398203 0.8026204 1.3939359 0.6578742 0.6115105\n\n$OutExpectedInfluence\n[1] 0.6843335 1.0617014 1.2398203 0.8026204 1.3939359 0.6578742 0.6115105\n\n$ShortestPathLengths\n          [,1]     [,2]     [,3]     [,4]     [,5]     [,6]      [,7]\n[1,]  0.000000 4.652070 8.775979 5.811999 2.687589 5.571099 11.889166\n[2,]  4.652070 0.000000 4.490226 4.591528 1.964481 4.847991  7.603413\n[3,]  8.775979 4.490226 0.000000 2.963980 6.454707 4.153870  3.113187\n[4,]  5.811999 4.591528 2.963980 0.000000 6.556008 7.117851  6.077168\n[5,]  2.687589 1.964481 6.454707 6.556008 0.000000 2.883510  9.567894\n[6,]  5.571099 4.847991 4.153870 7.117851 2.883510 0.000000  7.267057\n[7,] 11.889166 7.603413 3.113187 6.077168 9.567894 7.267057  0.000000\n\n$ShortestPaths\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7]\n[1,] NULL NULL NULL NULL NULL NULL NULL\n[2,] NULL NULL NULL NULL NULL NULL NULL\n[3,] NULL NULL NULL NULL NULL NULL NULL\n[4,] NULL NULL NULL NULL NULL NULL NULL\n[5,] NULL NULL NULL NULL NULL NULL NULL\n[6,] NULL NULL NULL NULL NULL NULL NULL\n[7,] NULL NULL NULL NULL NULL NULL NULL\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncentralityPlot(fit_k2$pairwise$wadj)\n```\n\n::: {.cell-output-display}\n![](混合变量网络分析_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n#### 2.4  边缘精确性分析\n\n关于混合图网络模型到的精确性、差异性和稳定性检验，同样会用到bootnet包。bootnet包支持多种模型算法，但需要设置estimateNetwork封装，且需要设置default。\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmgm_net = estimateNetwork(autism_data$data,\n                          type = autism_data$type,\n                          level = autism_data$lev,\n                          default = 'mgm')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nEstimating Network. Using package::function:\n  - mgm::mgm for network computation\n    - Using glmnet::glmnet\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in (function (data, type, level, tuning = 0.25, missing = c(\"listwise\",\n: Bootnet does not support unsigned edges and treats these as positive edges.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(mgm_net)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n=== Estimated network ===\nNumber of nodes: 7 \nNumber of non-zero edges: 13 / 21 \nMean weight: 0.09694593 \nNetwork stored in mgm_net$graph \n \nDefault set used: mgm \n \nUse plot(mgm_net) to plot estimated network \nUse bootnet(mgm_net) to bootstrap edge weights and centrality indices \n\nRelevant references:\n\n \tJonas M. B. Haslbeck, Lourens J. Waldorp (2016). mgm: Structure Estimation for Time-Varying Mixed Graphical Models in high-dimensional Data arXiv preprint:1510.06871v2 URL http://arxiv.org/abs/1510.06871v2.\n\tEpskamp, S., Borsboom, D., & Fried, E. I. (2016). Estimating psychological networks and their accuracy: a tutorial paper. arXiv preprint, arXiv:1604.08462.\n```\n:::\n:::\n\n\n绘图：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(mgm_net, layout = 'spring')\n```\n\n::: {.cell-output-display}\n![](混合变量网络分析_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncentralityPlot(mgm_net)\n```\n\n::: {.cell-output-display}\n![](混合变量网络分析_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n重抽样，为了节约时间，这里仅抽样50次：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\nboot_results2 = bootnet(mgm_net, nBoots = 50,default = 'mgm',\n                         type = \"nonparametric\",nCores = 8)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNote: bootnet will store only the following statistics:  edge, strength, outStrength, inStrength\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nBootstrapping...\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nComputing statistics...\n```\n:::\n:::\n\n\n可以把数据存储起来，代码可以这样写的save(boot_results2, file = \"mgm_boot_results2_mgm.RData\")，我这里就不运行了。\n\n然后，可以通过画图看看边缘估计的精确性：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(boot_results2, labels=FALSE, order=\"sample\")\n```\n\n::: {.cell-output-display}\n![](混合变量网络分析_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n部分边缘的95%CI还是有些宽的（阴影部分）。\n\n#### 2.5  差异性分析\n\n#### 2.5.1  中心性指标\n\n一般会检验强度中心性（Strength），下面的代码检验了各节点的Strength是否有显著差异。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#  节点差异性检验  输出数值\nlibrary(tidyverse)\nres2 = summary(boot_results2) %>% \n  ungroup %>% \n  filter(type == \"edge\") %>% \n  arrange(-sample)\nres2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 21 × 17\n   type  id        node1 node2 sample   mean     sd CIlower CIupper   q2.5 q97.5\n   <chr> <chr>     <chr> <chr>  <dbl>  <dbl>  <dbl>   <dbl>   <dbl>  <dbl> <dbl>\n 1 edge  IQ--Type… IQ    Type… 0.494  0.500  0.0303  0.433    0.555 0.423  0.559\n 2 edge  Integrat… Inte… No o… 0.315  0.333  0.0438  0.228    0.403 0.204  0.433\n 3 edge  Integrat… Inte… Sati… 0.314  0.315  0.0260  0.262    0.366 0.260  0.374\n 4 edge  Type of … Type… Work… 0.306  0.327  0.0365  0.233    0.378 0.241  0.391\n 5 edge  Gender--… Gend… Type… 0.300  0.329  0.0530  0.194    0.407 0.225  0.502\n 6 edge  IQ--Inte… IQ    Inte… 0.207  0.199  0.0396  0.127    0.286 0.0978 0.265\n 7 edge  Gender--… Gend… No o… 0.152  0.156  0.0395  0.0727   0.231 0.0205 0.245\n 8 edge  Integrat… Inte… Work… 0.148  0.199  0.0424  0.0627   0.232 0.133  0.307\n 9 edge  Integrat… Inte… Type… 0.0825 0.101  0.0262  0.0301   0.135 0.0423 0.162\n10 edge  Type of … Type… Sati… 0.0605 0.0598 0.0383 -0.0161   0.137 0      0.141\n# ℹ 11 more rows\n# ℹ 6 more variables: q2.5_non0 <dbl>, mean_non0 <dbl>, q97.5_non0 <dbl>,\n#   var_non0 <dbl>, sd_non0 <dbl>, prop0 <dbl>\n```\n:::\n:::\n\n\n可视化看看，结论会更清晰。\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 节点的两两比较，黑色表示显著\nplot(boot_results2, statistics=\"Strength\", plot=\"difference\",order = \"mean\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nExpected significance level given number of bootstrap samples is approximately: 0.049\n```\n:::\n\n::: {.cell-output-display}\n![](混合变量网络分析_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n如果你对此图的含义还不清楚，可以回看前面的\\\"横断面网络\\\"一节。\n\n#### 2.5.2  边缘比较\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(boot_results2, \"edge\", plot = \"difference\", \n     onlyNonZero = TRUE, order = \"sample\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nExpected significance level given number of bootstrap samples is approximately: 0.05\n```\n:::\n\n::: {.cell-output-display}\n![](混合变量网络分析_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n#### 2.6  稳定性分析\n\n与普通网络分析的方法类似，可以采用案例剔除法+bootstrap进行稳定性分析。bootnet提供了一个好用的接口，但此处需要额外调整下default。\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndrop_res = bootnet(mgm_net, nBoots = 100, default = \"mgm\", \n                  type=\"case\", statistics=\"all\",nCores = 12) #减轻计算负担\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nBootstrapping...\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nComputing statistics...\n```\n:::\n:::\n\n\n求稳定性相关系数：\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#计算相关稳定性系数\ncorStability(drop_res) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n=== Correlation Stability Analysis === \n\nSampling levels tested:\n   nPerson Drop%  n\n1      880  75.0 10\n2     1154  67.2  9\n3     1428  59.4  9\n4     1702  51.7  8\n5     1976  43.9  8\n6     2250  36.1 14\n7     2523  28.3  4\n8     2797  20.6  9\n9     3071  12.8 18\n10    3345   5.0 11\n\nMaximum drop proportions to retain correlation of 0.7 in at least 95% of the samples:\n\nbetweenness: 0.517 \n  - For more accuracy, run bootnet(..., caseMin = 0.439, caseMax = 0.594) \n\ncloseness: 0.517 \n  - For more accuracy, run bootnet(..., caseMin = 0.439, caseMax = 0.594) \n\ndistance: 0.75 (CS-coefficient is highest level tested)\n  - For more accuracy, run bootnet(..., caseMin = 0.672, caseMax = 1) \n\nedge: 0.75 (CS-coefficient is highest level tested)\n  - For more accuracy, run bootnet(..., caseMin = 0.672, caseMax = 1) \n\neigenvector: 0.75 (CS-coefficient is highest level tested)\n  - For more accuracy, run bootnet(..., caseMin = 0.672, caseMax = 1) \n\nexpectedInfluence: 0.75 (CS-coefficient is highest level tested)\n  - For more accuracy, run bootnet(..., caseMin = 0.672, caseMax = 1) \n\nhybrid: 0.75 (CS-coefficient is highest level tested)\n  - For more accuracy, run bootnet(..., caseMin = 0.672, caseMax = 1) \n\nlength: 0 \n  - For more accuracy, run bootnet(..., caseMin = 0, caseMax = 0.05) \n\nrspbc: 0.75 (CS-coefficient is highest level tested)\n  - For more accuracy, run bootnet(..., caseMin = 0.672, caseMax = 1) \n\nstrength: 0.75 (CS-coefficient is highest level tested)\n  - For more accuracy, run bootnet(..., caseMin = 0.672, caseMax = 1) \n\nAccuracy can also be increased by increasing both 'nBoots' and 'caseN'.\n```\n:::\n:::\n\n\n可以看到，几个重要的指标（强度、预期影响等）的相关稳定性系数都大于0.25，部分指标系数高达0.75，符合最低要求。\n\n绘图可能更为直观一点：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(drop_res, statistics=\"all\")\n```\n\n::: {.cell-output-display}\n![](混合变量网络分析_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n**运行环境：**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31 ucrt)\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\nRunning under: Windows 10 x64 (build 19045)\n\nMatrix products: default\n\n\nlocale:\n[1] LC_COLLATE=Chinese (Simplified)_China.utf8 \n[2] LC_CTYPE=Chinese (Simplified)_China.utf8   \n[3] LC_MONETARY=Chinese (Simplified)_China.utf8\n[4] LC_NUMERIC=C                               \n[5] LC_TIME=Chinese (Simplified)_China.utf8    \n\ntime zone: Asia/Shanghai\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] lubridate_1.9.3 forcats_1.0.0   stringr_1.5.1   dplyr_1.1.4    \n [5] purrr_1.0.2     readr_2.1.4     tidyr_1.3.1     tibble_3.2.1   \n [9] tidyverse_2.0.0 bootnet_1.6     ggplot2_3.5.0   qgraph_1.9.8   \n[13] mgm_1.2-14     \n\nloaded via a namespace (and not attached):\n  [1] RColorBrewer_1.1-3   rstudioapi_0.16.0    jsonlite_1.8.7      \n  [4] shape_1.4.6          magrittr_2.0.3       jomo_2.7-6          \n  [7] farver_2.1.1         nloptr_2.0.3         rmarkdown_2.25      \n [10] vctrs_0.6.4          minqa_1.2.6          heplots_1.6.0       \n [13] base64enc_0.1-3      htmltools_0.5.7      polynom_1.4-1       \n [16] plotrix_3.8-4        weights_1.0.4        broom_1.0.5         \n [19] Formula_1.2-5        mitml_0.4-5          htmlwidgets_1.6.2   \n [22] plyr_1.8.9           igraph_2.0.1.1       lifecycle_1.0.4     \n [25] iterators_1.0.14     pkgconfig_2.0.3      Matrix_1.6-5        \n [28] R6_2.5.1             fastmap_1.1.1        digest_0.6.33       \n [31] fdrtool_1.2.17       colorspace_2.1-0     Hmisc_5.1-1         \n [34] ellipse_0.5.0        labeling_0.4.3       fansi_1.0.5         \n [37] nnls_1.5             timechange_0.2.0     gdata_3.0.0         \n [40] abind_1.4-5          IsingSampler_0.2.3   compiler_4.3.2      \n [43] proxy_0.4-27         withr_2.5.2          doParallel_1.0.17   \n [46] glasso_1.11          htmlTable_2.4.2      backports_1.4.1     \n [49] carData_3.0-5        psych_2.3.9          R.utils_2.12.3      \n [52] pan_1.9              MASS_7.3-60          corpcor_1.6.10      \n [55] gtools_3.9.5         tools_4.3.2          pbivnorm_0.6.0      \n [58] foreign_0.8-85       nnet_7.3-19          R.oo_1.25.0         \n [61] glue_1.6.2           quadprog_1.5-8       NetworkToolbox_1.4.2\n [64] nlme_3.1-163         grid_4.3.2           checkmate_2.3.0     \n [67] cluster_2.1.4        reshape2_1.4.4       generics_0.1.3      \n [70] snow_0.4-4           gtable_0.3.4         tzdb_0.4.0          \n [73] R.methodsS3_1.8.2    class_7.3-22         data.table_1.15.4   \n [76] hms_1.1.3            car_3.1-2            utf8_1.2.4          \n [79] foreach_1.5.2        pillar_1.9.0         splines_4.3.2       \n [82] smacof_2.1-5         networktools_1.5.1   lattice_0.21-9      \n [85] survival_3.5-7       tidyselect_1.2.0     pbapply_1.7-2       \n [88] knitr_1.45           gridExtra_2.3        IsingFit_0.4        \n [91] stats4_4.3.2         xfun_0.41            stringi_1.8.1       \n [94] yaml_2.3.7           boot_1.3-28.1        evaluate_0.23       \n [97] codetools_0.2-19     wordcloud_2.6        cli_3.6.2           \n[100] rpart_4.1.21         munsell_0.5.0        lavaan_0.6-17       \n[103] candisc_0.8-6        Rcpp_1.0.11          png_0.1-8           \n[106] parallel_4.3.2       rgl_1.2.1            jpeg_0.1-10         \n[109] lme4_1.1-35.1        glmnet_4.1-8         mvtnorm_1.2-3       \n[112] scales_1.3.0         e1071_1.7-13         eigenmodel_1.11     \n[115] rlang_1.1.3          mnormt_2.1.1         mice_3.16.0         \n```\n:::\n:::\n",
    "supporting": [
      "混合变量网络分析_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}