---
title: "不同网络比较"
format: html
editor: visual
---

这节内容不多，主要介绍并演示如何采用R软件进行不同网络的比较，具体内容请见右上角的目录。

为避免出现版本兼容性问题，大家可以先看看我使用的编程环境（见文末）。

### 1 导入工具包

分别需要以下R包，没有安装的请先安装，安装方法见上一节。

```{r}
#| label: load-packages
#| include: false

library(bootnet)
library(NetworkComparisonTest)
library(mgm)
library(dplyr)
library(psych)
```

### 2 整理数据

这里使用的是bfi人格问卷数据，这份数据是R语言内置的公开数据集。具体细节请使用?psych::bfi查询。

网络分析比较吃硬件资源，所以这次我们仅选取少量数据进行分析：500x15，即500人，15个条目。

```{r}
md = bfi[1:500,1:15] 
str(md)
head(md)
```

由于横断面网络分析不能有缺失值，所以剔除有缺失值的行。

```{r}
md=na.omit(md) 
str(md)
```

为这份选用的内置数据集添加一个分组变量sex（模拟）：

```{r}
#设置随机数种子
set.seed(123) 

#模拟抽样
md$sex = sample(c(1, 2), size = 468, replace = TRUE)
```

根据sex对数据进行分组：

```{r}
male_data= as.matrix(md %>% filter(sex == 1))[,-16]
female_data= as.matrix(md %>% filter(sex== 2))[,-16]
```

### 3 建模并计算可预测性

#### 3.1 "男性"网络

```{r}
male_pre_mod = mgm(data = male_data,
              type = rep('g',15),
              level = rep(1,15),
              lambdaSel = "CV",
              ruleReg = "AND",
              # pbar = TRUE, 
              overparameterize = FALSE, 
              signInfo = FALSE)

```

计算可预测性值：

```{r}
male_pred_mgm = predict(object = male_pre_mod , 
                   data = male_data,
                   errorCon = c("R2"))
```

排序看看效果：

```{r}
male_pred_mgm$errors %>% arrange(desc(R2))
```

接下来，用bootnet包绘制带有可预测性值的网络图，先估计网络：

```{r}

Network_male = estimateNetwork(male_data, default = "EBICglasso")
```

再绘图，把male_pred_mgm\$errors塞进去：

```{r}
plot(Network_male,layout = "spring",
     pie=male_pred_mgm$errors[,2]
)
```

#### 3.2 "女性"网络

同样的做法：

```{r}

# 计算女性网络
female_pre_mod = mgm(data = female_data,
                   type = rep('g',15),
                   level = rep(1,15),
                   lambdaSel = "CV",
                   ruleReg = "AND",
                   # pbar = TRUE, 
                   overparameterize = FALSE, 
                   signInfo = FALSE)

female_pred_mgm = predict(object = female_pre_mod , 
                        data = female_data,
                        errorCon = c("R2"))
female_pred_mgm$errors %>% arrange(desc(R2))

# 可视化（带有可预测值的网络图）
library(bootnet)
Network_female = estimateNetwork(female_data, default = "EBICglasso")
plot(Network_female,layout = "spring",
     pie=female_pred_mgm$errors[,2]
)
```

### 4 网络比较

```{r}
nct_res=NCT(Network_male, 
              Network_female, 
              gamma=0.5,
              it = 100, 
              test.edges=T,
              test.centrality =T,
              centrality = c("strength","expectedInfluence"),
              p.adjust.methods = 'BH' #Bonferroni-Holm校正
              ) 
```

> 注意：为节省时间，本例调小了 iteration，实际研究可以设为1000次，

查看比较结果：

```{r}
summary(nct_res)
```

NETWORK INVARIANCE TEST是网络不变性检验，GLOBAL STRENGTH INVARIANCE TEST是全局强度不变性检验，EDGE INVARIANCE TEST是边缘不变性检验，CENTRALITY INVARIANCE TEST是中心性不变性检验。

**运行环境：**

```{r}
sessionInfo()
```
